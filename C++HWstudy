https://www.cnblogs.com/luolizhi/p/5746775.html  C++中cin、cin.get()、cin.getline()、getline()、gets()等函数的用法
std::getline()方法是string头文件中的，是属于sstream。

#include <fstream>
//自己写的方法，测过
std::ifstream fin("C:/ptx.txt");
	if (fin.fail()) {
		printf("打开ptx文件失败");
		return 0;
	}

	std::string curStr;
	std::vector<std::string> vec;
	while (std::getline(fin, curStr))
	{
		curStr = curStr + "\\n\"";
		std::cout << "\n" << curStr;
		vec.push_back(curStr);
	}
	fin.close();//用完关闭

	std::ofstream fout("D:/newPtx.txt");
	if (fout.fail()) {
		printf("生成newPtx文件失败");
		return 0;
	}
	for (int i = 0; i < vec.size(); i++)
	{
		fout << vec[i] << std::endl;
	}
	fout.close();
	

各种输出方法总结：
1、单个字符 
   1.1 cin.get（char &）：将读入的字符放在参数 char 中
   返回值是cin对象（cin其实就是istream对象，下面string的getline函数也是返回istream对象)，放在while中会判定为true，当到达文件末尾时，返回值判定为false。
       遍历每行所有字符
        char ch;
	while(cin.get(ch))
	{ //paocess  input  }
   1.2 cin.get（void）：返回值是读入字符对应的ASCII码，读取下一个字符，即使是空格符、换行符也可以读进来，返回其对应ascii（空格是32）。
       所以遍历每行所有字符方法：
        char ch;
	ch = cin.get();
	while(ch != '\n')
	{
		cout << ch ;
		ch=cin.get();
	}
       
   1.3 cin：最基本的，cin>>inchar; 是会过滤掉不可见字符（空格换行等）。 如输入A BC，那么要cin>>a>>b>>c,会过滤掉A和B中间的空格。
2、字符串
   2.1 getline：string头文件中的，最好用。参数为（ifstream，string）其中第二个参数存读入的string，可读空格，过滤到换行，下次直接从下行读。

*************************************************************************************************************************************
https://blog.csdn.net/qq_37059483/article/details/78608375  C++类成员初始化顺序问题
1、当用初始化列表初始化时，是按成员变量在类中定义的顺序初始化，如
   class A
   {
      public:
         A():n2(0),n1(n2 + 2) {}
	 void print()
         {
         cout << "n1:" << n1 << " ,  n2:" << n2 << endl;
         }
      private:
         int n1;
         int n2;  n1，n2什么时候创建？在创建A对象实例的时候创建，构造函数执行之前就有了。
	 如果类A还有个类B的对象B b;那么用b=new B；吗-->是不用的，系统会调用默认构造函数，创造一个对象，其实上面的int也是个类。
   }   
	 
    那么 A a；会打出n1是随机数，而不是2，n2是0。因为初始化列表初始化对象是按类中定义的顺序来给成员变量赋值。
      
    若将构造函数写成下面则不会错
     A() {
         n2=0；
	 n1=n2 + 2；
     }
    如果不使用初始化列表初始化，在构造函数内初始化时，此时与成员变量在构造函数中的位置有关。
    
3、注意：类成员在定义时，是不能初始化的     因为类只是个抽象，所以不能在类定义中给变量赋值，而且头文件本身不参与编译，cpp中用到了才会复制过来编译
4、注意：类中const成员常量必须在构造函数初始化列表中初始化。 
5、注意：类中static成员变量，必须在类外初始化。 
 *************************************************************************************************************************************
	

C++map用法：
1、map不会存在重复key，map添加新值的方法2种，insert（pair<int,int>）和[ ] ,其中第一种方法不能insert重复的key：
  map<int, int> map1;
  map1.insert(pair<int, int>(3, 4));
  map1.insert(pair<int, int>(3, 5));//3,5加不进去。
  第二种方法比较好，它会检查是否存在这个key，如果不存在则创建这个键值对，值默认为0，所以可以用来计数。
  map<int, int> map1;
  map[3] = 4;//一开始没有3，则创建这个键值对
  map[2]++;//没有2这个键，创建，默认值为0，++变为1。
2、map会自动排序，上例中虽然先加的3,4，但是里边的顺序是<2,1>然后是<3,4>。
3、遍历map：迭代器和for循环冒号用法
  for (auto elem : map1){
      printf("\n%d,%d", elem.first, elem.second);
  }
  
  for (auto iter = map1.begin(); iter != map1.end(); iter++)
  {   //通过（*iter）来获得当前pair
      printf("", (*iter).first, (*iter).second);
  }
  注意：map的[]中括号不是代表第几个pair，是代表key所对应的val，如map的[3]代表key为3对应的val值，所以不能用[]那样遍历，
       所以想输出val直接用map[key].
4、查找和删除
  auto iter = map1.find（key值）;
  if(iter!=map1.end())  //存在则删除
     map1.erase(iter);
     
C++set用法：
vector<int> vec{ 1,2,6,3,5,7,3,4 };
set<int> mySet(vec.begin(), vec.end());
for (auto elem : mySet)
   cout << elem << endl;
//cout按顺序输出1,2,3,4,5,6,7

1、创建并赋值，可用vec的begin和end
2、它默认
